// Generated from ./src/lang/Ocaml.g4 by ANTLR 4.9.0-SNAPSHOT
// @ts-nocheck
/* eslint-disable */

import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class OcamlLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly WHITESPACE = 42;
	public static readonly CAPITALIZED_IDENT = 43;
	public static readonly LOWERCASE_IDENT = 44;
	public static readonly IDENT = 45;
	public static readonly INTEGER_LITERAL = 46;
	public static readonly STRING_LITERAL = 47;
	public static readonly LABEL_NAME = 48;
	public static readonly OPERATOR_CHAR = 49;
	public static readonly INFIX_SYMBOL = 50;
	public static readonly PREFIX_SYMBOL = 51;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"WHITESPACE", "LETTER", "CAPITALIZED_IDENT", "LOWERCASE_IDENT", "IDENT", 
		"INTEGER_LITERAL", "STRING_LITERAL", "LABEL_NAME", "OPERATOR_CHAR", "INFIX_SYMBOL", 
		"PREFIX_SYMBOL", "SYMBOL",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'('", "')'", "'*'", "'+'", "'-'", "'-.'", "'='", "'!='", "'<'", 
		"'>'", "'or'", "'||'", "'&'", "'&&'", "':='", "'mod'", "'land'", "'lor'", 
		"'lxor'", "'lsl'", "'lsr'", "'asr'", "'''", "'->'", "'false'", "'true'", 
		"'_'", "'if'", "'then'", "'else'", "'while'", "'do'", "'done'", "'for'", 
		"'to'", "'downto'", "';'", "'fun'", "'let'", "'in'", "'rec'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		"WHITESPACE", "CAPITALIZED_IDENT", "LOWERCASE_IDENT", "IDENT", "INTEGER_LITERAL", 
		"STRING_LITERAL", "LABEL_NAME", "OPERATOR_CHAR", "INFIX_SYMBOL", "PREFIX_SYMBOL",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(OcamlLexer._LITERAL_NAMES, OcamlLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return OcamlLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(OcamlLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Ocaml.g4"; }

	// @Override
	public get ruleNames(): string[] { return OcamlLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return OcamlLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return OcamlLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return OcamlLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x025\u0151\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\t" +
		"\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03" +
		"\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03" +
		"\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03" +
		"\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03" +
		" \x03 \x03 \x03!\x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03" +
		"#\x03#\x03$\x03$\x03$\x03%\x03%\x03%\x03%\x03%\x03%\x03%\x03&\x03&\x03" +
		"\'\x03\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03" +
		"*\x03*\x03+\x06+\xFD\n+\r+\x0E+\xFE\x03+\x03+\x03,\x03,\x03-\x03-\x03" +
		"-\x07-\u0108\n-\f-\x0E-\u010B\v-\x03.\x03.\x03.\x07.\u0110\n.\f.\x0E." +
		"\u0113\v.\x03/\x03/\x05/\u0117\n/\x03/\x03/\x07/\u011B\n/\f/\x0E/\u011E" +
		"\v/\x030\x050\u0121\n0\x030\x030\x070\u0125\n0\f0\x0E0\u0128\v0\x031\x03" +
		"1\x031\x031\x031\x071\u012F\n1\f1\x0E1\u0132\v1\x031\x031\x032\x032\x03" +
		"3\x033\x034\x034\x074\u013C\n4\f4\x0E4\u013F\v4\x035\x035\x075\u0143\n" +
		"5\f5\x0E5\u0146\v5\x035\x035\x065\u014A\n5\r5\x0E5\u014B\x055\u014E\n" +
		"5\x036\x036\x02\x02\x027\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06" +
		"\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19" +
		"\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14" +
		"\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02" +
		"\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I" +
		"\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02\x02Y\x02-[\x02.]\x02/" +
		"_\x020a\x021c\x022e\x023g\x024i\x025k\x02\x02\x03\x02\f\x05\x02\v\f\x0F" +
		"\x0F\"\"\x04\x02C\\c|\x05\x02))2;aa\x04\x02aac|\x04\x022;aa\t\x02*+.." +
		"2;==]]__bb\v\x02##&(,-/1<<>B``~~\x80\x80\n\x02&(,-//11>@BB``~~\x04\x02" +
		"AA\x80\x80\f\x02##%(,-/1<<>B^^``~~\x80\x80\x02\u0160\x02\x03\x03\x02\x02" +
		"\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
		"\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
		"\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
		"\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
		"\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
		"\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)" +
		"\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
		"\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
		"\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02" +
		"K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02" +
		"\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02Y\x03\x02\x02\x02" +
		"\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03" +
		"\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02" +
		"\x02\x02i\x03\x02\x02\x02\x03m\x03\x02\x02\x02\x05o\x03\x02\x02\x02\x07" +
		"q\x03\x02\x02\x02\ts\x03\x02\x02\x02\vu\x03\x02\x02\x02\rw\x03\x02\x02" +
		"\x02\x0Fz\x03\x02\x02\x02\x11|\x03\x02\x02\x02\x13\x7F\x03\x02\x02\x02" +
		"\x15\x81\x03\x02\x02\x02\x17\x83\x03\x02\x02\x02\x19\x86\x03\x02\x02\x02" +
		"\x1B\x89\x03\x02\x02\x02\x1D\x8B\x03\x02\x02\x02\x1F\x8E\x03\x02\x02\x02" +
		"!\x91\x03\x02\x02\x02#\x95\x03\x02\x02\x02%\x9A\x03\x02\x02\x02\'\x9E" +
		"\x03\x02\x02\x02)\xA3\x03\x02\x02\x02+\xA7\x03\x02\x02\x02-\xAB\x03\x02" +
		"\x02\x02/\xAF\x03\x02\x02\x021\xB1\x03\x02\x02\x023\xB4\x03\x02\x02\x02" +
		"5\xBA\x03\x02\x02\x027\xBF\x03\x02\x02\x029\xC1\x03\x02\x02\x02;\xC4\x03" +
		"\x02\x02\x02=\xC9\x03\x02\x02\x02?\xCE\x03\x02\x02\x02A\xD4\x03\x02\x02" +
		"\x02C\xD7\x03\x02\x02\x02E\xDC\x03\x02\x02\x02G\xE0\x03\x02\x02\x02I\xE3" +
		"\x03\x02\x02\x02K\xEA\x03\x02\x02\x02M\xEC\x03\x02\x02\x02O\xF0\x03\x02" +
		"\x02\x02Q\xF4\x03\x02\x02\x02S\xF7\x03\x02\x02\x02U\xFC\x03\x02\x02\x02" +
		"W\u0102\x03\x02\x02\x02Y\u0104\x03\x02\x02\x02[\u010C\x03\x02\x02\x02" +
		"]\u0116\x03\x02\x02\x02_\u0120\x03\x02\x02\x02a\u0129\x03\x02\x02\x02" +
		"c\u0135\x03\x02\x02\x02e\u0137\x03\x02\x02\x02g\u0139\x03\x02\x02\x02" +
		"i\u014D\x03\x02\x02\x02k\u014F\x03\x02\x02\x02mn\x07*\x02\x02n\x04\x03" +
		"\x02\x02\x02op\x07+\x02\x02p\x06\x03\x02\x02\x02qr\x07,\x02\x02r\b\x03" +
		"\x02\x02\x02st\x07-\x02\x02t\n\x03\x02\x02\x02uv\x07/\x02\x02v\f\x03\x02" +
		"\x02\x02wx\x07/\x02\x02xy\x070\x02\x02y\x0E\x03\x02\x02\x02z{\x07?\x02" +
		"\x02{\x10\x03\x02\x02\x02|}\x07#\x02\x02}~\x07?\x02\x02~\x12\x03\x02\x02" +
		"\x02\x7F\x80\x07>\x02\x02\x80\x14\x03\x02\x02\x02\x81\x82\x07@\x02\x02" +
		"\x82\x16\x03\x02\x02\x02\x83\x84\x07q\x02\x02\x84\x85\x07t\x02\x02\x85" +
		"\x18\x03\x02\x02\x02\x86\x87\x07~\x02\x02\x87\x88\x07~\x02\x02\x88\x1A" +
		"\x03\x02\x02\x02\x89\x8A\x07(\x02\x02\x8A\x1C\x03\x02\x02\x02\x8B\x8C" +
		"\x07(\x02\x02\x8C\x8D\x07(\x02\x02\x8D\x1E\x03\x02\x02\x02\x8E\x8F\x07" +
		"<\x02\x02\x8F\x90\x07?\x02\x02\x90 \x03\x02\x02\x02\x91\x92\x07o\x02\x02" +
		"\x92\x93\x07q\x02\x02\x93\x94\x07f\x02\x02\x94\"\x03\x02\x02\x02\x95\x96" +
		"\x07n\x02\x02\x96\x97\x07c\x02\x02\x97\x98\x07p\x02\x02\x98\x99\x07f\x02" +
		"\x02\x99$\x03\x02\x02\x02\x9A\x9B\x07n\x02\x02\x9B\x9C\x07q\x02\x02\x9C" +
		"\x9D\x07t\x02\x02\x9D&\x03\x02\x02\x02\x9E\x9F\x07n\x02\x02\x9F\xA0\x07" +
		"z\x02\x02\xA0\xA1\x07q\x02\x02\xA1\xA2\x07t\x02\x02\xA2(\x03\x02\x02\x02" +
		"\xA3\xA4\x07n\x02\x02\xA4\xA5\x07u\x02\x02\xA5\xA6\x07n\x02\x02\xA6*\x03" +
		"\x02\x02\x02\xA7\xA8\x07n\x02\x02\xA8\xA9\x07u\x02\x02\xA9\xAA\x07t\x02" +
		"\x02\xAA,\x03\x02\x02\x02\xAB\xAC\x07c\x02\x02\xAC\xAD\x07u\x02\x02\xAD" +
		"\xAE\x07t\x02\x02\xAE.\x03\x02\x02\x02\xAF\xB0\x07)\x02\x02\xB00\x03\x02" +
		"\x02\x02\xB1\xB2\x07/\x02\x02\xB2\xB3\x07@\x02\x02\xB32\x03\x02\x02\x02" +
		"\xB4\xB5\x07h\x02\x02\xB5\xB6\x07c\x02\x02\xB6\xB7\x07n\x02\x02\xB7\xB8" +
		"\x07u\x02\x02\xB8\xB9\x07g\x02\x02\xB94\x03\x02\x02\x02\xBA\xBB\x07v\x02" +
		"\x02\xBB\xBC\x07t\x02\x02\xBC\xBD\x07w\x02\x02\xBD\xBE\x07g\x02\x02\xBE" +
		"6\x03\x02\x02\x02\xBF\xC0\x07a\x02\x02\xC08\x03\x02\x02\x02\xC1\xC2\x07" +
		"k\x02\x02\xC2\xC3\x07h\x02\x02\xC3:\x03\x02\x02\x02\xC4\xC5\x07v\x02\x02" +
		"\xC5\xC6\x07j\x02\x02\xC6\xC7\x07g\x02\x02\xC7\xC8\x07p\x02\x02\xC8<\x03" +
		"\x02\x02\x02\xC9\xCA\x07g\x02\x02\xCA\xCB\x07n\x02\x02\xCB\xCC\x07u\x02" +
		"\x02\xCC\xCD\x07g\x02\x02\xCD>\x03\x02\x02\x02\xCE\xCF\x07y\x02\x02\xCF" +
		"\xD0\x07j\x02\x02\xD0\xD1\x07k\x02\x02\xD1\xD2\x07n\x02\x02\xD2\xD3\x07" +
		"g\x02\x02\xD3@\x03\x02\x02\x02\xD4\xD5\x07f\x02\x02\xD5\xD6\x07q\x02\x02" +
		"\xD6B\x03\x02\x02\x02\xD7\xD8\x07f\x02\x02\xD8\xD9\x07q\x02\x02\xD9\xDA" +
		"\x07p\x02\x02\xDA\xDB\x07g\x02\x02\xDBD\x03\x02\x02\x02\xDC\xDD\x07h\x02" +
		"\x02\xDD\xDE\x07q\x02\x02\xDE\xDF\x07t\x02\x02\xDFF\x03\x02\x02\x02\xE0" +
		"\xE1\x07v\x02\x02\xE1\xE2\x07q\x02\x02\xE2H\x03\x02\x02\x02\xE3\xE4\x07" +
		"f\x02\x02\xE4\xE5\x07q\x02\x02\xE5\xE6\x07y\x02\x02\xE6\xE7\x07p\x02\x02" +
		"\xE7\xE8\x07v\x02\x02\xE8\xE9\x07q\x02\x02\xE9J\x03\x02\x02\x02\xEA\xEB" +
		"\x07=\x02\x02\xEBL\x03\x02\x02\x02\xEC\xED\x07h\x02\x02\xED\xEE\x07w\x02" +
		"\x02\xEE\xEF\x07p\x02\x02\xEFN\x03\x02\x02\x02\xF0\xF1\x07n\x02\x02\xF1" +
		"\xF2\x07g\x02\x02\xF2\xF3\x07v\x02\x02\xF3P\x03\x02\x02\x02\xF4\xF5\x07" +
		"k\x02\x02\xF5\xF6\x07p\x02\x02\xF6R\x03\x02\x02\x02\xF7\xF8\x07t\x02\x02" +
		"\xF8\xF9\x07g\x02\x02\xF9\xFA\x07e\x02\x02\xFAT\x03\x02\x02\x02\xFB\xFD" +
		"\t\x02\x02\x02\xFC\xFB\x03\x02\x02\x02\xFD\xFE\x03\x02\x02\x02\xFE\xFC" +
		"\x03\x02\x02\x02\xFE\xFF\x03\x02\x02\x02\xFF\u0100\x03\x02\x02\x02\u0100" +
		"\u0101\b+\x02\x02\u0101V\x03\x02\x02\x02\u0102\u0103\t\x03\x02\x02\u0103" +
		"X\x03\x02\x02\x02\u0104\u0109\x04C\\\x02\u0105\u0108\x05W,\x02\u0106\u0108" +
		"\t\x04\x02\x02\u0107\u0105\x03\x02\x02\x02\u0107\u0106\x03\x02\x02\x02" +
		"\u0108\u010B\x03\x02\x02\x02\u0109\u0107\x03\x02\x02\x02\u0109\u010A\x03" +
		"\x02\x02\x02\u010AZ\x03\x02\x02\x02\u010B\u0109\x03\x02\x02\x02\u010C" +
		"\u0111\t\x05\x02\x02\u010D\u0110\x05W,\x02\u010E\u0110\t\x04\x02\x02\u010F" +
		"\u010D\x03\x02\x02\x02\u010F\u010E\x03\x02\x02\x02\u0110\u0113\x03\x02" +
		"\x02\x02\u0111\u010F\x03\x02\x02\x02\u0111\u0112\x03\x02\x02\x02\u0112" +
		"\\\x03\x02\x02\x02\u0113\u0111\x03\x02\x02\x02\u0114\u0117\x05W,\x02\u0115" +
		"\u0117\x07a\x02\x02\u0116\u0114\x03\x02\x02\x02\u0116\u0115\x03\x02\x02" +
		"\x02\u0117\u011C\x03\x02\x02\x02\u0118\u011B\x05W,\x02\u0119\u011B\t\x04" +
		"\x02\x02\u011A\u0118\x03\x02\x02\x02\u011A\u0119\x03\x02\x02\x02\u011B" +
		"\u011E\x03\x02\x02\x02\u011C\u011A\x03\x02\x02\x02\u011C\u011D\x03\x02" +
		"\x02\x02\u011D^\x03\x02\x02\x02\u011E\u011C\x03\x02\x02\x02\u011F\u0121" +
		"\x07/\x02\x02\u0120\u011F\x03\x02\x02\x02\u0120\u0121\x03\x02\x02\x02" +
		"\u0121\u0122\x03\x02\x02\x02\u0122\u0126\x042;\x02\u0123\u0125\t\x06\x02" +
		"\x02\u0124\u0123\x03\x02\x02\x02\u0125\u0128\x03\x02\x02\x02\u0126\u0124" +
		"\x03\x02\x02\x02\u0126\u0127\x03\x02\x02\x02\u0127`\x03\x02\x02\x02\u0128" +
		"\u0126\x03\x02\x02\x02\u0129\u0130\x07$\x02\x02\u012A\u012F\x07\"\x02" +
		"\x02\u012B\u012F\x05W,\x02\u012C\u012F\x05k6\x02\u012D\u012F\t\x07\x02" +
		"\x02\u012E\u012A\x03\x02\x02\x02\u012E\u012B\x03\x02\x02\x02\u012E\u012C" +
		"\x03\x02\x02\x02\u012E\u012D\x03\x02\x02\x02\u012F\u0132\x03\x02\x02\x02" +
		"\u0130\u012E\x03\x02\x02\x02\u0130\u0131\x03\x02\x02\x02\u0131\u0133\x03" +
		"\x02\x02\x02\u0132\u0130\x03\x02\x02\x02\u0133\u0134\x07$\x02\x02\u0134" +
		"b\x03\x02\x02\x02\u0135\u0136\x05[.\x02\u0136d\x03\x02\x02\x02\u0137\u0138" +
		"\t\b\x02\x02\u0138f\x03\x02\x02\x02\u0139\u013D\t\t\x02\x02\u013A\u013C" +
		"\x05e3\x02\u013B\u013A\x03\x02\x02\x02\u013C\u013F\x03\x02\x02\x02\u013D" +
		"\u013B\x03\x02\x02\x02\u013D\u013E\x03\x02\x02\x02\u013Eh\x03\x02\x02" +
		"\x02\u013F\u013D\x03\x02\x02\x02\u0140\u0144\x07#\x02\x02\u0141\u0143" +
		"\x05e3\x02\u0142\u0141\x03\x02\x02\x02\u0143\u0146\x03\x02\x02\x02\u0144" +
		"\u0142\x03\x02\x02\x02\u0144\u0145\x03\x02\x02\x02\u0145\u014E\x03\x02" +
		"\x02\x02\u0146\u0144\x03\x02\x02\x02\u0147\u0149\t\n\x02\x02\u0148\u014A" +
		"\x05e3\x02\u0149\u0148\x03\x02\x02\x02\u014A\u014B\x03\x02\x02\x02\u014B" +
		"\u0149\x03\x02\x02\x02\u014B\u014C\x03\x02\x02\x02\u014C\u014E\x03\x02" +
		"\x02\x02\u014D\u0140\x03\x02\x02\x02\u014D\u0147\x03\x02\x02\x02\u014E" +
		"j\x03\x02\x02\x02\u014F\u0150\t\v\x02\x02\u0150l\x03\x02\x02\x02\x13\x02" +
		"\xFE\u0107\u0109\u010F\u0111\u0116\u011A\u011C\u0120\u0126\u012E\u0130" +
		"\u013D\u0144\u014B\u014D\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!OcamlLexer.__ATN) {
			OcamlLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(OcamlLexer._serializedATN));
		}

		return OcamlLexer.__ATN;
	}

}

